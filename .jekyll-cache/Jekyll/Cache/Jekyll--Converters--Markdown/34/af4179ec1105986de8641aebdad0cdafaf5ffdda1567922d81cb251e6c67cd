I"<h2 id="response-example">Response example</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{
  "data": [
    {
      "created_time": "2016-08-23T13:12:10+0000",
      "id": "1308573619175349"        // Photo ID
    },
    {
      "created_time": "2016-08-05T22:34:19+0000",
      "id": "1294456907253687"        // Photo ID
    },
    {
      "created_time": "2016-04-29T16:17:02+0000",
      "id": "1228552183844160"        // Photo ID
    }
  ]
}
</code></pre></div></div>

<h2 id="step-1-define-the-primary-layer-of-your-response-schema">Step 1: Define the primary layer of your response schema</h2>

<p>In the first place, this is a hash mapping. It has a single property, <em>data</em>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>responses: 
  "200":
    description: Success
    content:
      application/json:
        schema: 
          type: object
          properties:
            data:
              $ref: '#/components/schemas/data'

</code></pre></div></div>

<h2 id="step-2-move-on-to-the-second-layer">Step 2: Move on to the second layer</h2>

<p>Now, let’s proceed to the definition of its value part, in this case, an array. Unlike a dictionary, it consists of several <em>items</em>.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>components:
  schemas:
    data:
      type: array
      items:
        $ref: '#/components/schemas/Data'
</code></pre></div></div>

<h2 id="step-3-continue-to-expand-on-array-definition">Step 3: Continue to expand on array definition</h2>

<p>The array has several objects, each of which consists of a property and a scalar. Congratulations! You are almost finished, given that there’s no need to expand on scalars.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>components:
  schemas:
    Data:
      type: object
      properties: 
        created_time: 
          type: string
          example: "2017-12-08T01:08:57+0000" 
        message:
          type: string
          example: Love this puzzle. One of my favorite puzzles
        id: 
          type: integer
          format: int64
          example: 201906094894  
</code></pre></div></div>

<h2 id="oops-what-if-i-prefer-having-several-items-in-my-reponse-example-on-swagger-editor">Oops! What if I prefer having several items in my reponse example on Swagger Editor?</h2>

<p>Take a look at the above procedures? Ring any bells?  Properties each have an example. Wipe them out and append a whole-some example to your response:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      responses:
        "200":
          description: Successful responses
          content:
            application/json:
              schema: 
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/data_photo'
                example: 
                  {
                    "data": [
                      {
                        "height": 720,
                        "width": 720,
                        "id": "1308573619175349" 
                      },
                      {
                        "height": 720,
                        "width": 720,
                        "id": "1294456907253687"
                      },
                      {
                        "height": 180,
                        "width": 180,
                        "id": "1228552183844160" 
                      }
                    ]
                  }
</code></pre></div></div>

<h2 id="summary">Summary</h2>

<h3 id="array-and-object">Array and object</h3>

<p>An object has at least one property, while array one item.</p>

<h3 id="terminology">Terminology</h3>

<ul>
  <li>Hash / Mapping / Object / Dictionary</li>
  <li>Array</li>
  <li>Scalar</li>
  <li>Property</li>
  <li>Item</li>
  <li>Key-value pair</li>
</ul>
:ET