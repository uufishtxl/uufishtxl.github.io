I"—<h2 id="object-literals">Object literals</h2>

<blockquote>
  <p>A JavaScript object literal is a comma-separated list of name-value pairs wrapped in curly braces.</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const person = {
    firstName: 'John',
    lastName: 'Doe',
    age: 30,
    hobbies: ['music', 'movies', 'sports'],
    address: {
        steet: '50 main st',
        city: 'Boston',
        state: 'MA'
    }
}
</code></pre></div></div>

<h3 id="object-literals-and-json">Object literals and json</h3>

<blockquote>
  <p>The object literal notation is not the same as the JavaScript Object Notation (JSON). ‚Ä¶ In JSON the values can only be strings, numbers, arrays, true , false , null , or another (JSON) object. A function value (see ‚ÄúMethods‚Äù above) can not be assigned to a value in JSON.</p>
</blockquote>

<h3 id="extracting-data">Extracting data</h3>

<h4 id="approach-a">Approach A</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>console.log(person.hobbies[1]);
</code></pre></div></div>

<h4 id="es6-destructuring-assignment-Ëß£ÊûÑËµãÂÄº">ES6 Destructuring assignment (Ëß£ÊûÑËµãÂÄº)</h4>

<blockquote>
  <p>Destructuring assignment is a cool feature that came along with ES6. Destructuring is a JavaScript expression that makes it possible to <strong>unpack</strong> values from arrays, or properties from objects, <strong>into distinct variables</strong>. ES6 destructuring assignment makes it easier to extract this data.</p>
</blockquote>

<blockquote>
  <p>The object and array literal expressions provide an easy way to create ad hoc packages of data.</p>

  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var x = [1, 2, 3, 4, 5];
</code></pre></div>  </div>

  <p>The destructuring assignment uses similar syntax, but on the left-hand side of the assignment to define what values to unpack from the sourced variable.</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const person = {
    firstName: 'John',
    lastName: 'Doe',
    age: 30,
    hobbies: ['music', 'movies', 'sports'],
    address: {
        street: '50 main st',
        city: 'Boston',
        state: 'MA'
    }
}

const { firstName, lastName, address: {city} } = person;

console.log(city);
</code></pre></div></div>

<h3 id="adding-data-into-an-object-literal">Adding data into an object literal</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>person = {
  ...
}

person.email = 'johndoe@email.com'

console.log(person);
</code></pre></div></div>

<p>The printout also includes the email address.</p>

<h2 id="array-literals">Array literals</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const todos = [
    {
        id: 1,
        text: 'Take out of trash',
        isCompleted: true
    },
    {
        id: 2,
        text: 'Meeting with boss',
        isCompleted: true
    },
    {
        id: 3,
        text: 'Dentist appt',
        isCompleted: false
    }
];
</code></pre></div></div>
:ET