I"~<h2 id="remove-an-element">Remove an element</h2>

<ul>
  <li>Method: <code class="language-plaintext highlighter-rouge">remove()</code></li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const ul = document.querySelector('.items');

ul.remove();
</code></pre></div></div>

<h2 id="remove-the-last-element-child">Remove the last element child</h2>

<ul>
  <li>Property: <code class="language-plaintext highlighter-rouge">lastElementChild</code></li>
  <li>Method: <code class="language-plaintext highlighter-rouge">remove()</code></li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const ul = document.querySelector('.items');

ul.lastElementChild.remove();
</code></pre></div></div>

<h2 id="change-the-text-content-of-the-1st-element-child">Change the text content of the 1st element child</h2>

<ul>
  <li>Property: <code class="language-plaintext highlighter-rouge">firstElementChild</code></li>
  <li>Property: <code class="language-plaintext highlighter-rouge">textContent</code></li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const ul = document.querySelector('.items');

ul.firstElementChild.textContent = 'Hello';
</code></pre></div></div>

<h2 id="change-the-text-of-the-2nd-element-child">Change the text of the 2nd element child</h2>

<ul>
  <li>Property &amp; index: <code class="language-plaintext highlighter-rouge">children[1]</code></li>
  <li>Property: <code class="language-plaintext highlighter-rouge">InnerText</code></li>
  <li>Property: <code class="language-plaintext highlighter-rouge">innerHTML</code></li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const ul = document.querySelector('.items');

ul.children[1].innerText = 'Brad';
ul.lastElementChild.innerHTML = '&lt;h4&gt;Hello&lt;/h4&gt;';
</code></pre></div></div>

<h2 id="change-the-styling-of-an-element">Change the styling of an element</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const btn = document.querySelector('.btn');

btn.style.background = 'red';
</code></pre></div></div>

<h2 id="print-out-log-upon-an-event">Print out log upon an event</h2>

<ul>
  <li>Method: <code class="language-plaintext highlighter-rouge">addEventListener</code></li>
  <li>Method: <code class="language-plaintext highlighter-rouge">preventDefault()</code></li>
</ul>

<ol>
  <li>Locate the target using the <code class="language-plaintext highlighter-rouge">querySelector()</code> method.</li>
  <li>Add the <code class="language-plaintext highlighter-rouge">addEventListener</code> function.</li>
  <li>Set up the <strong>function</strong> to be called when <strong>the desired event</strong>, in this case, <code class="language-plaintext highlighter-rouge">click</code> is delivered to the target.</li>
  <li>Prevent the default behavior as a result of the event using <code class="language-plaintext highlighter-rouge">preventDefault()</code>.</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const btn = document.querySelector('.btn');

btn.addEventListener('click', (e) =&gt; {
  e.preventDefault();
  console.log('click');
});
</code></pre></div></div>

<h2 id="add-a-class-to-an-element-upon-an-event">Add a class to an element upon an event</h2>

<ul>
  <li>Method: <code class="language-plaintext highlighter-rouge">addEventListener</code></li>
  <li>Property: <code class="language-plaintext highlighter-rouge">style</code> / <code class="language-plaintext highlighter-rouge">background</code></li>
  <li>Method: <code class="language-plaintext highlighter-rouge">classList.add()</code></li>
  <li>Property: <code class="language-plaintext highlighter-rouge">.lastElementChild.innerHTML</code></li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const myForm = document.querySelector('#my-form');
const btn = document.querySelector('.btn');
const ul = document.querySelector('.items');

btn.addEventListener('click', (e) =&gt; {
  e.preventDefault();
  myForm.style.background = '#ccc';
  document.querySelector('body').classList.add('bg-dark');
  ul.lastElementChild.innerHTML = '&lt;h1&gt;Hello&lt;/h1&gt;'
  
})
</code></pre></div></div>

<h2 id="a-complex-and-thourough-example">A complex, and thourough example</h2>

<ul>
  <li>Event: <code class="language-plaintext highlighter-rouge">submit</code> - fires when a <code class="language-plaintext highlighter-rouge">&lt;form&gt;</code> is submitted</li>
  <li>Method: <code class="language-plaintext highlighter-rouge">querySelector()</code>;</li>
  <li>Method: <code class="language-plaintext highlighter-rouge">addEventListener()</code>;</li>
  <li>Method: <code class="language-plaintext highlighter-rouge">preventDefault()</code>;</li>
  <li>Method: <code class="language-plaintext highlighter-rouge">classList.add()</code>;</li>
  <li>Method: <code class="language-plaintext highlighter-rouge">setTimeout()</code>;
setTimeout(<em>function</em>, <em>milliseconds</em>， <em>param1</em>, …): Execute a function after a given period</li>
  <li>Method: <code class="language-plaintext highlighter-rouge">createElement()</code>;</li>
  <li>Method: <code class="language-plaintext highlighter-rouge">appendChile()</code>;</li>
  <li>Method: <code class="language-plaintext highlighter-rouge">createTextNode()</code>;</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const myForm = document.querySelector('#my-form');
const nameInput = document.querySelector('#name');
const emailInput = document.querySelector('#email');
const msg = document.querySelector('.msg');
const userList = document.querySelector('#users');

myForm.addEventListener('submit', onSubmit);

function onSubmit(e) {
  e.preventDefault();
  if (nameInput.value === '' || emailInput.value === ''){
    msg.classList.add('error');
    msg.innerHTML = 'Please enter all fields!';
    setTimeout(() =&gt; msg.remove(), 3000);
  }else {
    const li = document.createElement('li');
    li.appendChild(document.createTextNode(`${nameInput.value}: ${emailInput.value}`));

    userList.appendChild(li);

    //clear fields
    nameInput.value = '';
    emailInput.value = '';
  }
}

</code></pre></div></div>

:ET